@model RandomActs.Models.RandomAct

@{
    ViewBag.Title = "Edit a Random Act";
}

<h2>Edit an Act</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
     <div class="form-horizontal">
        <h4>Random Act</h4>
        <hr />
       @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.RandomActId)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { style = "width: 400px" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { style = "width: 400px" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Location, new { style = "width: 400px" })
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address, new { style = "width: 400px" })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City)
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.State, new { style = "width: 50px" })
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, new { @class = "control-label col-md-2 picker" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartTime, new { style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.StartTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndTime, new { style = "width: 200px" })
                @Html.ValidationMessageFor(model => model.EndTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxActors, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.MaxActors, new { style = "width: 50px" })
                @Html.ValidationMessageFor(model => model.MaxActors)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
